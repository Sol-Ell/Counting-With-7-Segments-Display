

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun  6 17:21:13 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	strings
   170  0003                     __pstrings:
   171  0003                     stringtab:
   172  0003                     __stringtab:
   173  0003                     stringcode:	
   174                           ;	String table - string pointers are 1 byte each
   175                           
   176  0003                     stringdir:
   177  0003  3000               	movlw	high stringdir
   178  0004  008A               	movwf	10
   179  0005  0804               	movf	4,w
   180  0006  0A84               	incf	4,f
   181  0007  0782               	addwf	2,f
   182  0008                     __stringbase:
   183  0008  3400               	retlw	0
   184  0009                     __end_of__stringtab:
   185  0009                     _digits:
   186  0009  343F               	retlw	63
   187  000A  3406               	retlw	6
   188  000B  345B               	retlw	91
   189  000C  344F               	retlw	79
   190  000D  3466               	retlw	102
   191  000E  346D               	retlw	109
   192  000F  347D               	retlw	125
   193  0010  3407               	retlw	7
   194  0011  347F               	retlw	127
   195  0012  346F               	retlw	111
   196  0013                     __end_of_digits:
   197  0006                     _PORTB	set	6
   198  0086                     _TRISB	set	134
   199                           
   200                           	psect	cinit
   201  07FC                     start_initialization:	
   202                           ; #config settings
   203                           
   204  07FC                     __initialization:
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2F6B   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	cstackCOMMON
   213  0070                     __pcstackCOMMON:
   214  0070                     ?_main:
   215  0070                     ?___awmod:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ___awmod@divisor:	
   219                           ; 2 bytes @ 0x0
   220                           
   221                           
   222                           ; 2 bytes @ 0x0
   223  0070                     	ds	2
   224  0072                     ___awmod@dividend:
   225                           
   226                           ; 2 bytes @ 0x2
   227  0072                     	ds	2
   228  0074                     ??___awmod:
   229                           
   230                           ; 1 bytes @ 0x4
   231  0074                     	ds	1
   232  0075                     ___awmod@counter:
   233                           
   234                           ; 1 bytes @ 0x5
   235  0075                     	ds	1
   236  0076                     ___awmod@sign:
   237                           
   238                           ; 1 bytes @ 0x6
   239  0076                     	ds	1
   240  0077                     ??_main:
   241                           
   242                           ; 1 bytes @ 0x7
   243  0077                     	ds	3
   244  007A                     main@number:
   245                           
   246                           ; 1 bytes @ 0xA
   247  007A                     	ds	1
   248                           
   249                           	psect	maintext
   250  076B                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 28 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  number          1   10[COMMON] unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         1       0       0       0       0
   272 ;;      Temps:          3       0       0       0       0
   273 ;;      Totals:         4       0       0       0       0
   274 ;;Total ram usage:        4 bytes
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		___awmod
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283  076B                     _main:	
   284                           ;psect for function _main
   285                           
   286  076B                     l694:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   289                           
   290                           
   291                           ;main.c: 29:     TRISB = 0;
   292  076B  1683               	bsf	3,5	;RP0=1, select bank1
   293  076C  1303               	bcf	3,6	;RP1=0, select bank1
   294  076D  0186               	clrf	6	;volatile
   295                           
   296                           ;main.c: 30:     unsigned char number = 0;
   297  076E  01FA               	clrf	main@number
   298  076F                     l696:
   299                           
   300                           ;main.c: 32:         PORTB = digits[number];
   301  076F  087A               	movf	main@number,w
   302  0770  3E01               	addlw	low ((_digits-__stringbase)| (0+32768))
   303  0771  0084               	movwf	4
   304  0772  120A  118A  2003  120A  118A  	fcall	stringdir
   305  0777  1283               	bcf	3,5	;RP0=0, select bank0
   306  0778  1303               	bcf	3,6	;RP1=0, select bank0
   307  0779  0086               	movwf	6	;volatile
   308  077A                     l698:
   309                           
   310                           ;main.c: 33:         number++;
   311  077A  3001               	movlw	1
   312  077B  00F7               	movwf	??_main
   313  077C  0877               	movf	??_main,w
   314  077D  07FA               	addwf	main@number,f
   315  077E                     l700:
   316                           
   317                           ;main.c: 34:         number %= 10;
   318  077E  300A               	movlw	10
   319  077F  00F0               	movwf	___awmod@divisor
   320  0780  3000               	movlw	0
   321  0781  00F1               	movwf	___awmod@divisor+1
   322  0782  087A               	movf	main@number,w
   323  0783  00F7               	movwf	??_main
   324  0784  01F8               	clrf	??_main+1
   325  0785  0877               	movf	??_main,w
   326  0786  00F2               	movwf	___awmod@dividend
   327  0787  0878               	movf	??_main+1,w
   328  0788  00F3               	movwf	___awmod@dividend+1
   329  0789  120A  118A  27A3  120A  118A  	fcall	___awmod
   330  078E  0870               	movf	?___awmod,w
   331  078F  00F9               	movwf	??_main+2
   332  0790  0879               	movf	??_main+2,w
   333  0791  00FA               	movwf	main@number
   334  0792                     l702:
   335                           
   336                           ;main.c: 35:         _delay((unsigned long)((1000)*(4e6/4000.0)));
   337  0792  3006               	movlw	6
   338  0793  00F9               	movwf	??_main+2
   339  0794  3013               	movlw	19
   340  0795  00F8               	movwf	??_main+1
   341  0796  30AD               	movlw	173
   342  0797  00F7               	movwf	??_main
   343  0798                     u197:
   344  0798  0BF7               	decfsz	??_main,f
   345  0799  2F98               	goto	u197
   346  079A  0BF8               	decfsz	??_main+1,f
   347  079B  2F98               	goto	u197
   348  079C  0BF9               	decfsz	??_main+2,f
   349  079D  2F98               	goto	u197
   350  079E  2F9F               	nop2
   351  079F  2F6F               	goto	l696
   352  07A0  120A  118A  2800   	ljmp	start
   353  07A3                     __end_of_main:
   354                           
   355                           	psect	text1
   356  07A3                     __ptext1:	
   357 ;; *************** function ___awmod *****************
   358 ;; Defined at:
   359 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c90/common/awmod.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;  divisor         2    0[COMMON] int 
   362 ;;  dividend        2    2[COMMON] int 
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  sign            1    6[COMMON] unsigned char 
   365 ;;  counter         1    5[COMMON] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2    0[COMMON] int 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         4       0       0       0       0
   376 ;;      Locals:         2       0       0       0       0
   377 ;;      Temps:          1       0       0       0       0
   378 ;;      Totals:         7       0       0       0       0
   379 ;;Total ram usage:        7 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388  07A3                     ___awmod:	
   389                           ;psect for function ___awmod
   390                           
   391  07A3                     l656:	
   392                           ;incstack = 0
   393                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   394                           
   395  07A3  01F6               	clrf	___awmod@sign
   396  07A4                     l658:
   397  07A4  1FF3               	btfss	___awmod@dividend+1,7
   398  07A5  2FA7               	goto	u101
   399  07A6  2FA8               	goto	u100
   400  07A7                     u101:
   401  07A7  2FAF               	goto	l664
   402  07A8                     u100:
   403  07A8                     l660:
   404  07A8  09F2               	comf	___awmod@dividend,f
   405  07A9  09F3               	comf	___awmod@dividend+1,f
   406  07AA  0AF2               	incf	___awmod@dividend,f
   407  07AB  1903               	skipnz
   408  07AC  0AF3               	incf	___awmod@dividend+1,f
   409  07AD                     l662:
   410  07AD  01F6               	clrf	___awmod@sign
   411  07AE  0AF6               	incf	___awmod@sign,f
   412  07AF                     l664:
   413  07AF  1FF1               	btfss	___awmod@divisor+1,7
   414  07B0  2FB2               	goto	u111
   415  07B1  2FB3               	goto	u110
   416  07B2                     u111:
   417  07B2  2FB8               	goto	l668
   418  07B3                     u110:
   419  07B3                     l666:
   420  07B3  09F0               	comf	___awmod@divisor,f
   421  07B4  09F1               	comf	___awmod@divisor+1,f
   422  07B5  0AF0               	incf	___awmod@divisor,f
   423  07B6  1903               	skipnz
   424  07B7  0AF1               	incf	___awmod@divisor+1,f
   425  07B8                     l668:
   426  07B8  0870               	movf	___awmod@divisor,w
   427  07B9  0471               	iorwf	___awmod@divisor+1,w
   428  07BA  1903               	btfsc	3,2
   429  07BB  2FBD               	goto	u121
   430  07BC  2FBE               	goto	u120
   431  07BD                     u121:
   432  07BD  2FED               	goto	l686
   433  07BE                     u120:
   434  07BE                     l670:
   435  07BE  01F5               	clrf	___awmod@counter
   436  07BF  0AF5               	incf	___awmod@counter,f
   437  07C0  2FCC               	goto	l676
   438  07C1                     l672:
   439  07C1  3001               	movlw	1
   440  07C2                     u135:
   441  07C2  1003               	clrc
   442  07C3  0DF0               	rlf	___awmod@divisor,f
   443  07C4  0DF1               	rlf	___awmod@divisor+1,f
   444  07C5  3EFF               	addlw	-1
   445  07C6  1D03               	skipz
   446  07C7  2FC2               	goto	u135
   447  07C8                     l674:
   448  07C8  3001               	movlw	1
   449  07C9  00F4               	movwf	??___awmod
   450  07CA  0874               	movf	??___awmod,w
   451  07CB  07F5               	addwf	___awmod@counter,f
   452  07CC                     l676:
   453  07CC  1FF1               	btfss	___awmod@divisor+1,7
   454  07CD  2FCF               	goto	u141
   455  07CE  2FD0               	goto	u140
   456  07CF                     u141:
   457  07CF  2FC1               	goto	l672
   458  07D0                     u140:
   459  07D0                     l678:
   460  07D0  0871               	movf	___awmod@divisor+1,w
   461  07D1  0273               	subwf	___awmod@dividend+1,w
   462  07D2  1D03               	skipz
   463  07D3  2FD6               	goto	u155
   464  07D4  0870               	movf	___awmod@divisor,w
   465  07D5  0272               	subwf	___awmod@dividend,w
   466  07D6                     u155:
   467  07D6  1C03               	skipc
   468  07D7  2FD9               	goto	u151
   469  07D8  2FDA               	goto	u150
   470  07D9                     u151:
   471  07D9  2FE0               	goto	l682
   472  07DA                     u150:
   473  07DA                     l680:
   474  07DA  0870               	movf	___awmod@divisor,w
   475  07DB  02F2               	subwf	___awmod@dividend,f
   476  07DC  0871               	movf	___awmod@divisor+1,w
   477  07DD  1C03               	skipc
   478  07DE  03F3               	decf	___awmod@dividend+1,f
   479  07DF  02F3               	subwf	___awmod@dividend+1,f
   480  07E0                     l682:
   481  07E0  3001               	movlw	1
   482  07E1                     u165:
   483  07E1  1003               	clrc
   484  07E2  0CF1               	rrf	___awmod@divisor+1,f
   485  07E3  0CF0               	rrf	___awmod@divisor,f
   486  07E4  3EFF               	addlw	-1
   487  07E5  1D03               	skipz
   488  07E6  2FE1               	goto	u165
   489  07E7                     l684:
   490  07E7  3001               	movlw	1
   491  07E8  02F5               	subwf	___awmod@counter,f
   492  07E9  1D03               	btfss	3,2
   493  07EA  2FEC               	goto	u171
   494  07EB  2FED               	goto	u170
   495  07EC                     u171:
   496  07EC  2FD0               	goto	l678
   497  07ED                     u170:
   498  07ED                     l686:
   499  07ED  0876               	movf	___awmod@sign,w
   500  07EE  1903               	btfsc	3,2
   501  07EF  2FF1               	goto	u181
   502  07F0  2FF2               	goto	u180
   503  07F1                     u181:
   504  07F1  2FF7               	goto	l690
   505  07F2                     u180:
   506  07F2                     l688:
   507  07F2  09F2               	comf	___awmod@dividend,f
   508  07F3  09F3               	comf	___awmod@dividend+1,f
   509  07F4  0AF2               	incf	___awmod@dividend,f
   510  07F5  1903               	skipnz
   511  07F6  0AF3               	incf	___awmod@dividend+1,f
   512  07F7                     l690:
   513  07F7  0873               	movf	___awmod@dividend+1,w
   514  07F8  00F1               	movwf	?___awmod+1
   515  07F9  0872               	movf	___awmod@dividend,w
   516  07FA  00F0               	movwf	?___awmod
   517  07FB                     l268:
   518  07FB  0008               	return
   519  07FC                     __end_of___awmod:
   520  007E                     btemp	set	126	;btemp
   521  007E                     wtemp0	set	126
   522                           
   523                           	psect	idloc
   524                           
   525                           ;Config register IDLOC0 @ 0x2000
   526                           ;	unspecified, using default values
   527  2000                     	org	8192
   528  2000  3FFF               	dw	16383
   529                           
   530                           ;Config register IDLOC1 @ 0x2001
   531                           ;	unspecified, using default values
   532  2001                     	org	8193
   533  2001  3FFF               	dw	16383
   534                           
   535                           ;Config register IDLOC2 @ 0x2002
   536                           ;	unspecified, using default values
   537  2002                     	org	8194
   538  2002  3FFF               	dw	16383
   539                           
   540                           ;Config register IDLOC3 @ 0x2003
   541                           ;	unspecified, using default values
   542  2003                     	org	8195
   543  2003  3FFF               	dw	16383
   544                           
   545                           	psect	config
   546                           
   547                           ;Config register CONFIG @ 0x2007
   548                           ;	Oscillator Selection bits
   549                           ;	FOSC = XT, XT oscillator
   550                           ;	Watchdog Timer Enable bit
   551                           ;	WDTE = OFF, WDT disabled
   552                           ;	Power-up Timer Enable bit
   553                           ;	PWRTE = ON, PWRT enabled
   554                           ;	Brown-out Reset Enable bit
   555                           ;	BOREN = ON, BOR enabled
   556                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   557                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   558                           ;	Data EEPROM Memory Code Protection bit
   559                           ;	CPD = OFF, Data EEPROM code protection off
   560                           ;	Flash Program Memory Write Enable bits
   561                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   562                           ;	In-Circuit Debugger Mode bit
   563                           ;	DEBUG = 0x1, unprogrammed default
   564                           ;	Flash Program Memory Code Protection bit
   565                           ;	CP = OFF, Code protection off
   566  2007                     	org	8199
   567  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     495
                                              7 COMMON     4     4      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun  6 17:21:13 2022

                      pc 0002                       fsr 0004                      l268 07FB  
                    l700 077E                      l702 0792                      l660 07A8  
                    l670 07BE                      l662 07AD                      l680 07DA  
                    l672 07C1                      l664 07AF                      l656 07A3  
                    l690 07F7                      l682 07E0                      l674 07C8  
                    l666 07B3                      l658 07A4                      l684 07E7  
                    l676 07CC                      l668 07B8                      l678 07D0  
                    l686 07ED                      l694 076B                      l688 07F2  
                    l696 076F                      l698 077A                      u100 07A8  
                    u101 07A7                      u110 07B3                      u111 07B2  
                    u120 07BE                      u121 07BD                      u140 07D0  
                    u141 07CF                      u150 07DA                      u151 07D9  
                    u135 07C2                      u170 07ED                      u171 07EC  
                    u155 07D6                      u180 07F2                      u181 07F1  
                    u165 07E1                      u197 0798                      fsr0 0004  
           ___awmod@sign 0076                     _main 076B                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awmod 07FC  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07A3                   ??_main 0077                ??___awmod 0074  
                 _digits 0009          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 076B  
             __stringtab 0003                  ___awmod 07A3                  __ptext1 07A3  
       ___awmod@dividend 0072     end_of_initialization 07FC               main@number 007A  
         __end_of_digits 0013      start_initialization 07FC                ___latbits 0002  
               ?___awmod 0070                __pstrings 0003              __stringbase 0008  
     __end_of__stringtab 0009                stringcode 0003                 stringdir 0003  
               stringtab 0003  
